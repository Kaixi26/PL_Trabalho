
[Comment]
# This is a full-line comment
key = "value"  # This is a comment at the end of a line
another = "# This is not a comment"

[KeyValuePair]
key = "value"

[Keys]
key = "value"
bare_key = "value"
bare-key = "value"
1234 = "value"

[QuottedKeys]
"127.0.0.1" = "value"
"character encoding" = "value"
"ʎǝʞ" = "value"
'key2' = "value"
'quoted "value"' = "value"

[DottedKeys]
name = "Orange"
physical.color = "orange"
physical.shape = "round"
site."google.com" = true

# 3.14159 = "pi"

[Types.String]
#str = "I'm a string. \"You can quote me\". Name\tJos\u00E9\nLocation\tSF."
str2 = "Roses are red\nViolets are blue"
str3 = "Roses are red\r\nViolets are blue"

#str4 = """Here are two quotation marks: "". Simple enough."""

winpath  = 'C:\\Users\\nodejs\\templates'
winpath2 = '\\\\ServerX\\admin$\\system32\\'
#quoted   = 'Tom "Dubs" Preston-Werner'
regex    = '<\\i\\c*\\s*>'

# regex2 = '''I [dw]on't need \d{2} apples'''

[Types.Integer]
int1 = +99
int2 = 42
int3 = 0
int4 = -17

int5 = 1_000
int6 = 5_349_221
int7 = 1_2_3_4_5     # VALID but discouraged

#hex1 = 0xDEADBEEF
#oct1 = 0o01234567
#bin1 = 0b11010110

[Types.Float]
# fractional
flt1 = +1.0
flt2 = 3.1415
flt3 = -0.01

# exponent
flt4 = 5e+22
flt5 = 1e06
flt6 = -2E-2

# both
flt7 = 6.626e-34

#flt8 = 224_617.445_991_228

# infinity
sf1 = inf # positive infinity
sf2 = +inf # positive infinity
sf3 = -inf # negative infinity

# not a number
sf4 = nan
sf5 = +nan
sf6 = -nan

[Types.Boolean]
bool1 = true
bool2 = false

[Types.Date]
odt1 = 1979-05-27T07:32:00Z
odt2 = 1979-05-27T00:32:00-07:00
odt3 = 1979-05-27T00:32:00.999999-07:00

odt4 = 1979-05-27 07:32:00Z

ldt1 = 1979-05-27T07:32:00
ldt2 = 1979-05-27T00:32:00.999999

ld1 = 1979-05-27

lt1 = 07:32:00
lt2 = 00:32:00.999999

[Types.Array]
integers = [ 1, 2, 3 ]
nested_array_of_int = [ [ 1, 2 ], [3, 4, 5] ]
nested_mixed_array = [ [ 1, 2 ], ["a", "b", "c"] ]
#string_array = [ "all", 'strings', """are the same""", '''type''' ]
string_array = [ "all", 'strings', "are the same", "type" ]

# Mixed-type arrays are allowed
numbers = [ 0.1, 0.2, 0.5, 1, 2, 5 ]
contributors = [
  "Foo Bar <foo@example.com>"
# { name = "Baz Qux", email = "bazqux@example.com", url = "https://example.com/bazqux" }
]

integers2 = [
  1, 2, 3
]

integers3 = [
  1,
  2, # this is ok
]

[Types.Table.table-1]
key1 = "some string"
key2 = 123

[Types.Table.table-2]
key1 = "another string"
key2 = 456

[Types.Table.dog."tater.man"]
type.name = "pug"

[Types.Table.a] # this is best practice
test = true
[ Types.Table.a ]
test2 = true

#doesn't match:
#[ g .  h  . i ]
#[ j . "ʞ" . 'l' ]

[Types.Table.super.child]
test = true
[Types.Table.super] # defining a super-table afterwards is ok
test = true

##### (Not Implemented) ####
#Inline Table
#name = { first = "Tom", last = "Preston-Werner" }
#point = { x = 1, y = 2 }
#animal = { type.name = "pug" }

#Array of Tables
#[[products]]
#name = "Hammer"
#sku = 738594937

#[[products]]
#name = "Nail"
#sku = 284758393

